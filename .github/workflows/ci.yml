name: CI (Frontend + Backend)

on:
  push:
    branches: [ main, develop ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    name: Frontend (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Unit tests
        run: npm test --if-present -- --ci
      - name: Build
        run: npm run build
      - name: Upload FE artifact
        uses: actions/upload-artifact@v4
        with:
          name: fe-dist
          path: frontend/dist
          if-no-files-found: error

  backend:
    name: Backend (Python + Mongo service)
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7
        ports: ["27017:27017"]
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      MONGO_URI: mongodb://localhost:27017/testdb
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      PYTHONPATH: ${{ github.workspace }}/backend
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Lint
        run: flake8 .

      - name: Unit tests
        run: pytest -q

      - name: Package backend (for deploy)
        run: |
          mkdir -p ./package
          cp -r app ./package/app
          cp requirements.txt ./package/
          printf "MONGO_URI=${MONGO_URI}\n" > ./package/.env

      - name: Upload BE artifact
        uses: actions/upload-artifact@v4
        with:
          name: be-package
          path: backend/package
          if-no-files-found: error

  docker:
    name: Docker build & push (optional on tags)
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./_artifacts
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }},ghcr.io/${{ env.IMAGE_NAME }}:latest
          build-args: |
            FE_DIST=_artifacts/fe-dist
            BE_PKG=_artifacts/be-package
